// Generated by CoffeeScript 1.3.3
(function() {

  $(document).ready(function() {
    var inputFile, urlVars;
    urlVars = getUrlVars();
    if (!(urlVars["path"] != null)) {
      urlVars["path"] = "";
    }
    if (!(urlVars["groups"] != null)) {
      urlVars["groups"] = 0;
    }
    if (!(urlVars["clusters"] != null)) {
      urlVars["clusters"] = 0;
    }
    if (!(urlVars["tags"] != null)) {
      urlVars["tags"] = 0;
    }
    if (!(urlVars["no_heatmap"] != null)) {
      urlVars["no_heatmap"] = 0;
    }
    if (!(urlVars["no_gene_names"] != null)) {
      urlVars["no_gene_names"] = 0;
    }
    if (!(urlVars["no_pcp"] != null)) {
      urlVars["no_pcp"] = 0;
    }
    if (urlVars["file"]) {
      inputFile = urlVars["path"] + urlVars["file"];
      return d3.text(inputFile, function(text) {
        var dashboardView, heatmapView, parsedGenes, parsedGenesModel, pcpView,
          _this = this;
        parsedGenes = d3.csv.parse(text);
        parsedGenesModel = new window.ParsedGenesModel(parsedGenes);
        parsedGenesModel.set({
          inputFile: inputFile
        });
        parsedGenesModel.set({
          hideHeatmap: urlVars["no_heatmap"]
        });
        parsedGenesModel.set({
          hideGeneNames: urlVars["no_gene_names"]
        });
        parsedGenesModel.set({
          hidePCP: urlVars["no_pcp"]
        });
        parsedGenesModel.set({
          showSuffix: urlVars["suffix"]
        });
        parsedGenesModel.set({
          showGroups: urlVars["groups"]
        });
        parsedGenesModel.set({
          showClusters: urlVars["clusters"]
        });
        parsedGenesModel.set({
          showTags: urlVars["tags"]
        });
        parsedGenesModel.set({
          currentGeneName: null
        });
        parsedGenesModel.set({
          clickedGeneName: null
        });
        parsedGenesModel.set({
          currentCluster: null
        });
        parsedGenesModel.set({
          currentTag: null
        });
        d3.select("body").style("padding-top", d3.select("#dashboard").node().offsetHeight);
        d3.select("body").on("click", function() {
          parsedGenesModel.set({
            clickedGeneName: null
          });
          parsedGenesModel.set({
            currentTag: null
          });
          d3.selectAll(".tag_name").classed("current", 0);
          parsedGenesModel.set({
            currentCluster: null
          });
          return d3.selectAll(".clusters span").classed("current", 0);
        });
        dashboardView = new window.DashboardView({
          el: "#dashboard",
          model: parsedGenesModel
        });
        heatmapView = new window.HeatmapView({
          el: "#heatmap",
          model: parsedGenesModel,
          showTags: urlVars["tags"]
        });
        pcpView = new window.PcpView({
          el: "#pcp",
          model: parsedGenesModel
        });
        d3.select("main").style("width", "" + (d3.select("#pcp").node().offsetWidth + d3.select("#heatmap").node().offsetWidth + 10) + "px");
        return d3.select("body").style("width", "auto");
      });
    } else {
      return $("body").load("_landing.html");
    }
  });

}).call(this);
